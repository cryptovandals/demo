import './Connect.svelte.css.proxy.js';
/* src/Connect.svelte generated by Svelte v3.35.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space
} from "../_snowpack/pkg/svelte/internal.js";

import { connect } from "./state.js";

function create_fragment(ctx) {
	let div;
	let section;
	let h1;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let button;
	let t4;
	let br;
	let t5;
	let a;
	let mounted;
	let dispose;

	return {
		c() {
			div = element("div");
			section = element("section");
			h1 = element("h1");
			h1.textContent = "CryptoVandals";
			t1 = space();
			img = element("img");
			t2 = space();
			button = element("button");
			button.innerHTML = `<span>Connect your wallet</span>`;
			t4 = space();
			br = element("br");
			t5 = space();
			a = element("a");
			a.textContent = "About CryptoVandals";
			attr(h1, "class", "svelte-vjup0b");
			if (img.src !== (img_src_value = "./images/header.png")) attr(img, "src", img_src_value);
			attr(img, "alt", "CryptoVandals logo");
			attr(img, "class", "svelte-vjup0b");
			attr(button, "class", "button-shadow");
			attr(a, "href", "https://github.com/cryptovandals/contracts");
			attr(section, "class", "svelte-vjup0b");
			attr(div, "class", "fullpage");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, section);
			append(section, h1);
			append(section, t1);
			append(section, img);
			append(section, t2);
			append(section, button);
			append(section, t4);
			append(section, br);
			append(section, t5);
			append(section, a);

			if (!mounted) {
				dispose = listen(button, "click", connect);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			mounted = false;
			dispose();
		}
	};
}

class Connect extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Connect;